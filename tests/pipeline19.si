
unit test(input uint32 i)
{
  uint32 cycle(0);
  uint32 v(0);

  algorithm {

     __display("[0]",v);

    ->

      while (v < 10) {
        __display("[1] v = %d",v);
        v = v + 1;
      }

    ->

      __display("[2]",v);

  }

  always_after {
    cycle = cycle + 1;
  }
}

unit main(output uint8 leds)
{
  uint32 cycle(0);

  test   t;

  algorithm {

    t <- (cycle);
    __display("started on cycle %d",cycle);
    while (!isdone(t)) { } // algorithm is not done until pipeline has finished
    __display("done on cycle %d",cycle);

  }

  always_after {
    cycle = cycle + 1;
  }
}

/*

[0]         0
[1] v =          0
[1] v =          1
[1] v =          2
[1] v =          3
[1] v =          4
[1] v =          5
[1] v =          6
[1] v =          7
[1] v =          8
[1] v =          9
[2]        10
done on cycle         27

*/